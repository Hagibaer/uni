# Variables and Classes
a <- 3.0
b <- 4.5
class(a)
class(b) == 'character'
a^2 + 1/b
sqrt(a*b)
# Matrix algebra
A = matrix(c(1,4,7,2,5,8,3,6,10), nrow=3)
B = matrix(c(1:9), nrow=3)
y = matrix(c(1:3))
a * A
A %*% B
invA = solve(A)
A %*%invA
t(B)
B[1,] = c(1,1,1)
ols = function(A, y) solve(t(A)%*%A)%*%t(A)%*%y
ols(A, y)
# Indexing
# A B y (anzeigen)
A[3,2] * B[2,1]
A[1,] * B[,3]
y[y>1]
A[,2][A[,1] >= 4]
# Custom function
standardize = function(x) {
if (is.numeric(x)){
mu = mean(x)
std = sd(x)
return((x - mu) / std)
}
else{
return(x)
}
}
a = c(-100, -25, -10, 0, 10, 25, 100)
standardize(a)
# Using inbuilt-functions
dnorm(x = c(1,2,3,6))
x = seq(-2,2, by=0.2)
nvValues = dnorm(x, mean = 0, sd = 1)
plot(x = x, y = nvValues, type='l')
B <- matrix(c(1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1), ncol=4)
B
eigen(B)
A <- matrix(c(1, sqrt(2), sqrt(2), 0),ncol = 2)
eigen(A)
str(loan)
# load data from csv
loan = read.csv('Loan_Data.csv', header = TRUE)
str(loan)
str(loan)
str(loan)
# load data from csv
loan <- read.csv('loan_data.csv',sep = ';', header = TRUE)
str(loan)
# set working directory
setwd("C:/Users/Hagen/uni/DS")
# load data from csv
loan <- read.csv('loan_data.csv',sep = ';', header = TRUE)
str(loan)
#summarise data
summarise(loan)
#summarise data
describe(loan)
#summarise data
summary(loan)
install.packages("caret")
help(train)
# Get caret and look at the train-method (idk why, part of the task)
library(caret)
help(train)
# Histogram time
hist(loan$dINC_A)
install.packages("Hmisc")
hist(loan)
# set working directory
setwd("C:/Users/Hagen/uni/DS")
# load data from csv
loan <- read.csv('loan_data.csv',sep = ';', header = TRUE)
str(loan)
#summarise data
summary(loan)
# Get caret and look at the train-method (idk why, part of the task)
library(caret)
help(train)
# Histogram time
hist(loan$dINC_A)  # single value
library(Hmisc)
hist(loan)
loan$dINC_A
summary(loan$dINC_A)
inc.good <- loan$INC_A[loan$BAD == 0]
inc.bad <- loan$INC_A[loan$BAD == 0]
boxplot(x = inc.good, inc.bad)
inc.bad <- loan$INC_A[loan$BAD == 1]
boxplot(x = inc.good, inc.bad)
inc.good
inc.good <- loan$dINC_A[loan$BAD == 0]
inc.bad <- loan$dINC_A[loan$BAD == 1]
boxplot(x = inc.good, inc.bad)
inc.good
boxplot(x = inc.good, inc.bad)
boxplot(x = inc.good, inc.bad, names = ['Good', 'Bad'])
boxplot(x = inc.good, inc.bad, names = 'Good, Bad')
boxplot(x = inc.good, inc.bad, names = 'Good')
boxplot(x = inc.good, inc.bad, names = 'Good', 'Bad')
boxplot(x = inc.good, inc.bad, names = c('Good', 'Bad'))
boxplot(x = inc.good, inc.bad, names = c('Good', 'Bad'), yaxt='Applicants income [$]')
boxplot(x = inc.good, inc.bad, names = c('Good', 'Bad'), ylab=('Applicants income [$]')
boxplot(x = inc.good, inc.bad, names = c('Good', 'Bad'), ylab=('Applicants income [$]'))
boxplot(x = inc.good, inc.bad, names = c('Good', 'Bad'), ylab=('Applicants income [$]'))
mean_good = mean(inc.good)
mean_bad = mean(inc.bad)
difference = mean_good - mean_bad
difference
t.test(mean_good, mean_bad)
t.test(inc.good, inc.bad)
result[pvalue]
result[p.value]
result['p.value']
class(result)
result = t.test(inc.good, inc.bad)
class(result)
result.p_value
result$p.value
